# Check out https://docs.codemagic.io/getting-started/building-a-react-native-app/ for more information
# Please review and update values in curly braces

# Check out https://docs.codemagic.io/getting-started/building-a-react-native-app/ for more information
# Please review and update values in curly braces

workflows:
    react-native:
        name: React Native App
        environment:
            vars:
                XCODE_WORKSPACE: "test_cicd_gitlab.xcworkspace"
                XCODE_SCHEME: "test_cicd_gitlab"
            node: latest
        scripts:
            - npm install
            - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
            - |
                # build Android
                cd android
                ./gradlew assembleDebug
            - |
                # build iOS
                cd ios
                pod install
                xcodebuild build -workspace "$XCODE_WORKSPACE.xcworkspace" -scheme "$XCODE_SCHEME" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
        artifacts:
            - android/app/build/outputs/**/*.apk
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

# workflows:
#   react-native:
#     name: React Native App
#     environment:
#       vars:
#         XCODE_WORKSPACE: '{{ ADD WORKSPACE NAME HERE }}'
#         XCODE_SCHEME: '{{ ADD SCHEME NAME HERE }}'
#       node: latest
#     scripts:
#       - npm install
#       - echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/android/local.properties"
#       - |
#         # build Android
#         cd android
#         ./gradlew assembleDebug
#       - |
#         # build iOS
#         cd ios
#         pod install
#         xcodebuild build -workspace "$XCODE_WORKSPACE.xcworkspace" -scheme "$XCODE_SCHEME" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO
#     artifacts:
#       - android/app/build/outputs/**/*.apk
#       - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
#       - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
# workflows:
#   android-workflow:
#     name: Android Workflow
#     max_build_duration: 60
#     instance_type: mac_pro
#     environment:
#       vars:
#         CM_KEYSTORE: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE FILE HERE
#         CM_KEYSTORE_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED PASSWORD FOR THE KEYSTORE FILE HERE
#         CM_KEY_ALIAS_PASSWORD: Encrypted(...) # PUT THE ENCRYPTED KEYSTORE ALIAS PASSWORD HERE
#         CM_KEY_ALIAS_USERNAME: Encrypted(...) #PUT THE ENCRYPTED KEYSTORE USERNAME HERE
#       node: latest
#     triggering:
#       events:
#         - push
#         - tag
#         - pull_request
#       branch_patterns:
#         - pattern: release
#           include: true
#           source: true
#     scripts:
#       - name: Set up local properties
#         script: echo "sdk.dir=$HOME/programs/android-sdk-macosx" > "$FCI_BUILD_DIR/local.properties"
#       - name: Set up key.properties file for code signing
#         script: |
#           echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
#           cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
#           storePassword=$CM_KEYSTORE_PASSWORD
#           keyPassword=$CM_KEY_ALIAS_PASSWORD
#           keyAlias=$CM_KEY_ALIAS_USERNAME
#           storeFile=/tmp/keystore.keystore
#           EOF
#       - name: Build Android app
#         script: ./gradlew assembleRelease
#     artifacts:
#       - app/build/outputs/**/**/*.apk
#     publishing:
#       google_play:
#         credentials: Encrypted(...) # PUT YOUR ENCRYPTED GOOGLE PLAY JSON CREDENTIALS FILE HERE
#         track: internal
